---
description: 
globs: components/**/*.vue
alwaysApply: false
---

# Component Rules

- All components should exist in the `/components` directory
- They should be documented in the `/content/components` directory and mirror the file structure from the components directory
- Each component should exist in it's own folder and be prefixed by it's folder name. The folder can also include sublementary components that are only meant for use within the slot of the main component. And example of this structure is as follows:

```
- components
    - Modal
        - Modal.vue
        - ModalBody.vue
        - ModalHead.vue
        - ModalActions.vue
```

- No need to import vue functions like ref, they are auto-imported
- If using a prop named class, make sure to alway reference it as `props.class` and NEVER just `class` in the template.
- Each component should also include a histoire story in the same directory as it's defined

- Always check [props.ts](mdc:types/props.ts) for commonly used props to keep our component API's consistent. If a new prop is needed for a newly created component that's likely to be needed across multiple components add it here. 
- import props from [props.ts](mdc:types/props.ts) when possible for use in components.

- All more "generic" type components should exist at the root of the components directory. 


## "Block" Components

- Blocks (or more app specific components) should exist under the folder `Component/Block/Block[ComponentName].vue` (for example, a user card, a navbar, etc)

- If you are unsure if a new component should be "block" or not, just ask and wait for me to reply.

- If you don't have the proper generic components to build up a block app, stop and let me know that too!






