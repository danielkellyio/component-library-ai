---
description: 
globs: components/**/*.vue
alwaysApply: false
---

# Component Rules

- All components should exist in the `/components` directory
- They should be documented in the `/content/components` directory and mirror the file structure from the components directory
- Each component should exist in it's own folder and be prefixed by it's folder name. The folder can also include sublementary components that are only meant for use within the slot of the main component. And example of this structure is as follows:

```
- components
    - Modal
        - Modal.vue
        - ModalBody.vue
        - ModalHead.vue
        - ModalActions.vue
```

- No need to import vue functions like ref, they are auto-imported
- If using a prop named class, make sure to alway reference it as `props.class` and NEVER just `class` in the template.
- Each component should also include a histoire story in the same directory as it's defined

## Component Styles
- Use inline tailwind classes to style. NEVER use @apply. If you need to use a tailwind color in the style section you can do so with a css custom property like this: var(--color-primary)
- Backgrounds colored with brand or status theme colors should use the proper class as defined in theme.css (for example: .primary-bg and .primary-content)
- All components with brand or theme backgrounds should also support a gradient prop (in which case the corresponding `-bg-gradient` class should be used to style the background)
- Text color classes should always be used based on the background colors of the element the text exists in (for example, .primary-bg should ALWAYS have `primary-content`)
- Only brand and status colors have dedicated classes in [theme.css](mdc:assets/theme.css) (like primary-content), for all others the generated tailwind classes based on the theme variables should be used
- When setting backgrounds with theme and status colors do NOT alter their opacity.
- For elements with a brand or status theme background color add a border-1 around it with the main color at 50% opacity like `bg-primary/50`
- 
